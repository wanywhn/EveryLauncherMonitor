/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.gitee.wanywhn.everylauncherMonitor.xml -i server.h -a ServerAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SERVERADAPTOR_H
#define SERVERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "server.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface local.Server
 */
class ServerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "local.Server")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"local.Server\">\n"
"    <signal name=\"fileWrited\">\n"
"      <arg direction=\"out\" type=\"as\" name=\"files\"/>\n"
"    </signal>\n"
"    <method name=\"myrun\"/>\n"
"    <method name=\"setWatchPaths\">\n"
"      <arg direction=\"in\" type=\"as\" name=\"paths\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ServerAdaptor(QObject *parent);
    virtual ~ServerAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void myrun();
    void setWatchPaths(const QStringList &paths);
Q_SIGNALS: // SIGNALS
    void fileWrited(const QStringList &files);
};

#endif
